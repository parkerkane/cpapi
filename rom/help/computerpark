computerpark.callLater(timeout, function)
> function foo() print('bar') end
> computerpark.callLater(5, foo)
> computerpark.callLater(1, function() rs.setOutput('back', false) end)

computerpark.handleTimer(timer)
> evt, arg = os.pullEvent()
> if evt == 'timer' then handleTimer(arg) end

computerpark.main(listener)
> computerpark.main({
>    key = function(code)
>        print('key:', key)
>    end;
>
>   default = function(a,b,c,d)
>        print('default:', a,b,c,d)
>   end
>})

---

port = computerpark.openPort(side)

Redstone:
> port:set()
> port:clear()
> port:test()

Bundle:
> port:set(bit[, bit[, ...]])
> port:clear(bit[, bit[, ...]])
> port:test(bit)
> port:testOut(bit)

---

computerpark.initLog(side, targetID)
computerpark.log(message)

---

computerpark.bnot(a)
computerpark.bor(a,b)
computerpark.band(a,b)
computerpark.bxor(a,b)