cp.callLater(timeout, function)
> function foo() print('bar') end
> cp.callLater(5, foo)
> cp.callLater(1, function() rs.setOutput('back', false) end)

cp.handleTimer(timer)
> evt, arg = os.pullEvent()
> if evt == 'timer' then handleTimer(arg) end

cp.main(listener)
> cp.main({
>    key = function(code)
>        print('key:', key)
>    end;
>
>   default = function(a,b,c,d)
>        print('default:', a,b,c,d)
>   end
>})

---

port = cp.portOpen(side)

Redstone:
> port:set()
> port:clear()
> port:test()

Bundle:
> port:set(bit[, bit[, ...]])
> port:clear(bit[, bit[, ...]])
> port:test(bit)
> port:testOut(bit)

---

cp.logInit(side, targetID)
cp.log(message)